---
- include_tasks: "install-{{ ansible_facts.os_family }}.yml"

- name: check for installation of etcd
  become: yes
  stat:
    path: '{{ etcd_install_dir }}/{{ etcd_name }}'
  changed_when: false
  register: etcd_binary_dir

- name: Create temporary directory
  tempfile:
    state: directory
    suffix: etcd
  register: etcd_tempdir

- name: Download etcd checksums
  get_url:
    url: 'https://github.com/etcd-io/etcd/releases/download/{{ etcd_version }}/SHA256SUMS'
    dest: '{{ etcd_tempdir.path }}/SHA256SUMS'
    timeout: '{{ etcd_download_timeout_seconds }}'

- name: Read checksums
  read_csv:
    path: '{{ etcd_tempdir.path }}/SHA256SUMS'
    fieldnames: hash,file
    delimiter: ' '
    skipinitialspace: yes
  register: checksums

- name: Record the expected checksum
  set_fact:
    etcd_checksum: "sha256:{{ item.hash }}"
  with_list: "{{ checksums.list }}"
  when: item.file == etcd_archive

- when: not etcd_binary_dir.stat.exists
  block:
    - name: download etcd
      get_url:
        url: '{{ etcd_archive_url }}'
        dest: '{{ etcd_tempdir.path }}/{{ etcd_archive }}'
        checksum: '{{ etcd_checksum }}'
        timeout: '{{ etcd_download_timeout_seconds }}'
        mode: 0644
    - name: unarchive etcd
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: '{{ etcd_tempdir.path }}/{{ etcd_archive }}'
        dest: '{{ etcd_install_dir }}'
        creates: '{{ etcd_install_dir }}/{{ etcd_name }}'
  always:
    - name: delete archive
      file:
        path: '{{ etcd_tempdir.path }}/{{ etcd_archive }}'
        state: absent

- name: link etcd and etcdctl
  become: yes
  become_user: root
  file:
    src: '{{ etcd_install_dir }}/{{ etcd_name }}/{{ item }}'
    dest: '{{ etcd_install_dir }}/{{ item }}'
    state: link
  with_items:
    - etcd{{ etcd_exe_suffix|default("") }}
    - etcdctl{{ etcd_exe_suffix|default("") }}

- name: Collect facts
  set_fact:
    cacheable: yes
    etcd_listen_public: '{{ "0.0.0.0" if etcd_iface_public == "all" else ansible_default_ipv4.address if etcd_iface_public == "default" else hostvars[inventory_hostname]["ansible_" ~ etcd_iface_public]["ipv4"]["address"] }}'
    etcd_listen_cluster: '{{ "0.0.0.0" if etcd_iface_cluster == "all" else ansible_default_ipv4.address if etcd_iface_cluster == "default" else hostvars[inventory_hostname]["ansible_" ~ etcd_iface_cluster]["ipv4"]["address"] }}'
    etcd_address_public: '{{ ansible_fqdn if not etcd_use_ips | bool else ansible_default_ipv4.address if etcd_iface_public is in [ "all", "default" ] else hostvars[inventory_hostname]["ansible_" ~ etcd_iface_public]["ipv4"]["address"] }}'
    etcd_address_cluster: '{{ ansible_fqdn if not etcd_use_ips | bool else ansible_default_ipv4.address if etcd_iface_cluster is in [ "all", "default" ] else hostvars[inventory_hostname]["ansible_" ~ etcd_iface_cluster]["ipv4"]["address"] }}'

- name: create etcd group
  become: yes
  become_user: root
  group:
    name: '{{ etcd_group }}'
    state: present

- name: create etcd user
  become: yes
  become_user: root
  user:
    name: '{{ etcd_user }}'
    group: '{{ etcd_group }}'
    home: '{{ etcd_data_dir }}'
    state: present

- name: create dirs...
  become: yes
  become_user: root
  file:
    state: directory
    path: '{{ item }}'
    owner: '{{ etcd_user }}'
    group: '{{ etcd_group }}'
    mode: 0755
  with_items:
    - /etc/etcd
    - '{{ etcd_cluster_pki_dir }}'

- include_tasks: pki.yml
  when: etcd_secure | bool

- name: install etcd.service configuration
  become: yes
  become_user: root
  with_items:
    - f: etcd.conf
      d: /etc/etcd
  template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    owner: '{{ etcd_user }}'
    group: '{{ etcd_group }}'
    mode: 0644
  notify:
  - restart etcd masters
  - restart etcd members

- include_tasks: '{{ etcd_init_system }}.yml'

- name: Force all notified handlers to run
  meta: flush_handlers
